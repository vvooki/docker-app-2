name: Build and Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: vvooki/moja-aplikacja

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set timestamp tag
        id: vars
        run: echo "TAG=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Build and push image nginx
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./nginx/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}-nginx:latest
            ${{ env.IMAGE_NAME }}-nginx:${{ steps.vars.outputs.TAG }}

      - name: Build and push image php
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./php/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}-php:latest
            ${{ env.IMAGE_NAME }}-php:${{ steps.vars.outputs.TAG }}

      - name: Build and push image sql
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./mysql/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}-sql:latest
            ${{ env.IMAGE_NAME }}-sql:${{ steps.vars.outputs.TAG }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: List workspace for debug
        run: |
            echo "Biezacy katalog"
            pwd
            echo "Zawartosc:"
            ls -lah

      - name: Generate .env file
        run: |
          echo "CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}" > .env
          echo "Zawartosc pliku .env:"
          cat .env

      - name: Copy .env to remote host
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}   
          source: ".env"
          target: "/app/lukasz/"
          overwrite: true
          debug: true

      - name: Copy config files and compose to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          source: "docker-compose-swarm.yml,nginx/nginx-swarm.conf,secret.txt"
          target: "/app/lukasz/"
          debug: true

      - name: Run deployment on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /app/lukasz
            docker stack deploy -c docker-compose-swarm.yml apka-lukasz
